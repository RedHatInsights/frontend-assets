// eslint-disable @typescript-eslint/no-require-imports
const path = require('path');
const CopyPlugin = require('copy-webpack-plugin');

module.exports = {
  appUrl: ['/apps/frontend-assets'],
  debug: true,
  useProxy: true,
  proxyVerbose: true,
  sassPrefix: '.frontend-assets, .frontendAssets',
  frontendCRDPath: path.resolve(__dirname, 'config', 'frontend.yml'),
  plugins: [
    new CopyPlugin({
      patterns: [
        {
          from: path.resolve(__dirname, 'src', '**/*.{svg,png,jpg,jpeg}'),
          to: ({ absoluteFilename, context }) => {
            // Ensure the destination path of icons is relative to the context
            const dest = `${context}${absoluteFilename.replace(context, '').replace('/src', '/dist')}`;
            return dest;
          },
        },
      ],
    }),
  ],
  // do not modify this object, it is generated by a script to automatically generate the icons

  /* eslint-disable prettier/prettier */
  moduleFederation: {
    exposes: {
      "./AcmForKubernetes": path.resolve(__dirname, 'src', 'technology-icons/acm-for-kubernetes.tsx'),
      "./Acs": path.resolve(__dirname, 'src', 'technology-icons/acs.tsx'),
      "./Amq": path.resolve(__dirname, 'src', 'technology-icons/amq.tsx'),
      "./Ansible": path.resolve(__dirname, 'src', 'technology-icons/ansible.tsx'),
      "./AnsibleAutomationHubHosted": path.resolve(__dirname, 'src', 'technology-icons/ansible-automation-hub-hosted.tsx'),
      "./AnsibleAutomationPlatformOperator": path.resolve(__dirname, 'src', 'technology-icons/ansible-automation-platform-operator.tsx'),
      "./AnsibleContentCollections": path.resolve(__dirname, 'src', 'technology-icons/ansible-content-collections.tsx'),
      "./AnsibleContentTools": path.resolve(__dirname, 'src', 'technology-icons/ansible-content-tools.tsx'),
      "./AnsibleCore": path.resolve(__dirname, 'src', 'technology-icons/ansible-core.tsx'),
      "./AnsiblePlaybooks": path.resolve(__dirname, 'src', 'technology-icons/ansible-playbooks.tsx'),
      "./AnsibleRulebook": path.resolve(__dirname, 'src', 'technology-icons/ansible-rulebook.tsx'),
      "./ApacheKafka": path.resolve(__dirname, 'src', 'technology-icons/apache-kafka.tsx'),
      "./AppServices": path.resolve(__dirname, 'src', 'technology-icons/app-services.tsx'),
      "./AutomationContentNavigator": path.resolve(__dirname, 'src', 'technology-icons/automation-content-navigator.tsx'),
      "./AutomationController": path.resolve(__dirname, 'src', 'technology-icons/automation-controller.tsx'),
      "./AutomationExecutionEnvironments": path.resolve(__dirname, 'src', 'technology-icons/automation-execution-environments.tsx'),
      "./AutomationMesh": path.resolve(__dirname, 'src', 'technology-icons/automation-mesh.tsx'),
      "./Aws": path.resolve(__dirname, 'src', 'partners/aws.tsx'),
      "./BuildOfApacheCamel": path.resolve(__dirname, 'src', 'technology-icons/build-of-apache-camel.tsx'),
      "./BuildOfOpenTelemetry": path.resolve(__dirname, 'src', 'technology-icons/build-of-open-telemetry.tsx'),
      "./BuildOfQuarkus": path.resolve(__dirname, 'src', 'technology-icons/build-of-quarkus.tsx'),
      "./BuildsForOpenshift": path.resolve(__dirname, 'src', 'technology-icons/builds-for-openshift.tsx'),
      "./ComplianceOperator": path.resolve(__dirname, 'src', 'technology-icons/compliance-operator.tsx'),
      "./CustomMetricsAutoscaler": path.resolve(__dirname, 'src', 'technology-icons/custom-metrics-autoscaler.tsx'),
      "./DataScience": path.resolve(__dirname, 'src', 'technology-icons/data-science.tsx'),
      "./DependencyAnalytics": path.resolve(__dirname, 'src', 'technology-icons/dependency-analytics.tsx'),
      "./DeveloperHub": path.resolve(__dirname, 'src', 'technology-icons/developer-hub.tsx'),
      "./DeviceEdge": path.resolve(__dirname, 'src', 'technology-icons/device-edge.tsx'),
      "./DistributedTracing": path.resolve(__dirname, 'src', 'technology-icons/distributed-tracing.tsx'),
      "./Edge": path.resolve(__dirname, 'src', 'technology-icons/edge.tsx'),
      "./EventDrivenAnsibleController": path.resolve(__dirname, 'src', 'technology-icons/event-driven-ansible-controller.tsx'),
      "./ExecutionEnvironmentBuilder": path.resolve(__dirname, 'src', 'technology-icons/execution-environment-builder.tsx'),
      "./FileIntegrityOperator": path.resolve(__dirname, 'src', 'technology-icons/file-integrity-operator.tsx'),
      "./Iam": path.resolve(__dirname, 'src', 'technology-icons/iam.tsx'),
      "./ImageMode": path.resolve(__dirname, 'src', 'technology-icons/image-mode.tsx'),
      "./InfraredIntelligenceFeature": path.resolve(__dirname, 'src', 'technology-icons/infrared-intelligence-feature.tsx'),
      "./InfrastructureOperatorForOpenshift": path.resolve(__dirname, 'src', 'technology-icons/infrastructure-operator-for-openshift.tsx'),
      "./Insights": path.resolve(__dirname, 'src', 'technology-icons/insights.tsx'),
      "./Integrations": path.resolve(__dirname, 'src', 'technology-icons/integrations.tsx'),
      "./JbossEap": path.resolve(__dirname, 'src', 'technology-icons/jboss-eap.tsx'),
      "./LearningResources": path.resolve(__dirname, 'src', 'technology-icons/learning-resources.tsx'),
      "./Lightspeed": path.resolve(__dirname, 'src', 'technology-icons/lightspeed.tsx'),
      "./MigrationToolkit": path.resolve(__dirname, 'src', 'technology-icons/migration-toolkit.tsx'),
      "./Notifications": path.resolve(__dirname, 'src', 'technology-icons/notifications.tsx'),
      "./Openshift": path.resolve(__dirname, 'src', 'technology-icons/openshift.tsx'),
      "./OpenshiftAi": path.resolve(__dirname, 'src', 'technology-icons/openshift-ai.tsx'),
      "./OpenshiftApiDesigner": path.resolve(__dirname, 'src', 'technology-icons/openshift-api-designer.tsx'),
      "./OpenshiftConnectors": path.resolve(__dirname, 'src', 'technology-icons/openshift-connectors.tsx'),
      "./OpenshiftDatabaseAccess": path.resolve(__dirname, 'src', 'technology-icons/openshift-database-access.tsx'),
      "./OpenshiftDevSpaces": path.resolve(__dirname, 'src', 'technology-icons/openshift-dev-spaces.tsx'),
      "./OpenshiftGitOps": path.resolve(__dirname, 'src', 'technology-icons/openshift-git-ops.tsx'),
      "./OpenshiftPipelines": path.resolve(__dirname, 'src', 'technology-icons/openshift-pipelines.tsx'),
      "./OpenshiftSandboxedContainers": path.resolve(__dirname, 'src', 'technology-icons/openshift-sandboxed-containers.tsx'),
      "./OpenshiftServerless": path.resolve(__dirname, 'src', 'technology-icons/openshift-serverless.tsx'),
      "./OpenshiftServiceMesh": path.resolve(__dirname, 'src', 'technology-icons/openshift-service-mesh.tsx'),
      "./OpenshiftServiceRegistry": path.resolve(__dirname, 'src', 'technology-icons/openshift-service-registry.tsx'),
      "./OpenshiftSmartEvents": path.resolve(__dirname, 'src', 'technology-icons/openshift-smart-events.tsx'),
      "./OpenshiftVirtualization": path.resolve(__dirname, 'src', 'technology-icons/openshift-virtualization.tsx'),
      "./OpenstackPlatform": path.resolve(__dirname, 'src', 'technology-icons/openstack-platform.tsx'),
      "./Placeholder1": path.resolve(__dirname, 'src', 'technology-icons/placeholder-1.tsx'),
      "./Placeholder2": path.resolve(__dirname, 'src', 'technology-icons/placeholder-2.tsx'),
      "./PrivateAutomationHub": path.resolve(__dirname, 'src', 'technology-icons/private-automation-hub.tsx'),
      "./QuayIo": path.resolve(__dirname, 'src', 'technology-icons/quay-io.tsx'),
      "./Rh": path.resolve(__dirname, 'src', 'technology-icons/rh.tsx'),
      "./Rhel": path.resolve(__dirname, 'src', 'technology-icons/rhel.tsx'),
      "./RhelLinuxForWorkstations": path.resolve(__dirname, 'src', 'technology-icons/rhel-linux-for-workstations.tsx'),
      "./Rhtap": path.resolve(__dirname, 'src', 'technology-icons/rhtap.tsx'),
      "./Runtimes": path.resolve(__dirname, 'src', 'technology-icons/runtimes.tsx'),
      "./Satellite": path.resolve(__dirname, 'src', 'technology-icons/satellite.tsx'),
      "./SecurityProfileOperator": path.resolve(__dirname, 'src', 'technology-icons/security-profile-operator.tsx'),
      "./Settings": path.resolve(__dirname, 'src', 'technology-icons/settings.tsx'),
      "./SingleSignOn": path.resolve(__dirname, 'src', 'technology-icons/single-sign-on.tsx'),
      "./Subscriptions": path.resolve(__dirname, 'src', 'technology-icons/subscriptions.tsx'),
      "./ThreescaleApiManagement": path.resolve(__dirname, 'src', 'technology-icons/threescale-api-management.tsx'),
      "./TrustedArtifact": path.resolve(__dirname, 'src', 'technology-icons/trusted-artifact.tsx'),
      "./TrustedArtifactSigner": path.resolve(__dirname, 'src', 'technology-icons/trusted-artifact-signer.tsx'),
      "./TrustedContent1": path.resolve(__dirname, 'src', 'technology-icons/trusted-content-1.tsx'),
      "./TrustedContent2": path.resolve(__dirname, 'src', 'technology-icons/trusted-content-2.tsx')
    },
  },
  /* eslint-enable prettier/prettier */
};

